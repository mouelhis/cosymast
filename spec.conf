Switched spec {

  Dimension = 2 ;
  
  Modes = { `m_1 , `m_2} ;
     
  Constants :
     r0,vs = 1 ;
     rl = 0.05 ;
     rc = 0.005 ;
     xl = 3.0 ;
     xc = 70.0 ;
     xd = 7 * 2 - 3 * ln(3);
  
  Variables :
     il, vl5 : real -> real ;
     u1 : real -> [5.1 .. 5.2] ;
     u2 : [3.2 .. 5.2] ;
     u3 : real -> [4.0 .. 5.3] ;
  
  Trajectories :
     x = [il, vl5] ;
     y = [u3 , u1] ;
  
  Coefficients :
     A1,A2,A3,A4,A5,A6 : Matrix (2) ;
     B : Vector (2) ;
     D : Vector (2) ;
     E : real -> real ;
     F : Matrix (2);
     A : real -> real ;;
     A1 = [[ -rl / xl , 0 ] , [ 0 , -1 / (xc * (r0 + rc)) ]] ;
     A2 = [[ -(rl + ((r0 * rc) / (r0 + rc))) / xl , -(r0 / (r0 + rc)) / (5 * xl) ],
           [ (5 * r0 / (r0 + rc)) / xc , - (1 / xc * (r0 + rc)) ]];
     A3 = [[-0.5 , 0] , [0 , -0.005]] ;
     A4 = [[-0.4 , 0] , [0 , -0.004]] ;
     A5 = [[-0.3 , 0] , [0 , -0.003]] ;
     A6 = [[-0.2 , 0] , [0 , -0.002]] ;
     B = [ vs / xl , pi ] ; 
     
     D = [log(2,10) + ln(3) - xc * 3, exp(3) * @t] ;
     E = sin(pi) + cos(pi / 2) + tg(3 * pi / 2) * @t + ctg(5) + sec (3) ;
     F = [[asin(3 + tg(2)) , acos(5 + atg(3 * pi))], 
          [sinh(2) + cosh(3 * pi), tanh (3 * sin(pi) + sqrt(10))]] ;
     A = (2 ^ 3) + exp(3) ;
     
  
  VectorFields :
       
     /*
     for x :
     simplified when `m_3 :: x_dot = A1 * x + B ;     
     expanded when `m_2 :: 
        il_dot = sin(il) + cos(vl5) * @t ,
        vl5_dot = v1 * A + cos(vl5) + ln(il)  ; 
     */
     
   
     
     for x : 
     in safe1 then 
       simplified when `m_2 :: x_dot = A1 * x + B ; 
       //simplified when `m_2 :: x_dot = A2 * x + B ;   
       expanded when `m_1 :: 
        il_dot = cos(il) + cos(vl5) * @t ,
        vl5_dot = A + cos(vl5) + ln(il)  ; 
     else in safe3 then 
       simplified when `m_1 :: x_dot = A3 * x + B ; 
       simplified when `m_2 :: x_dot = A4 * x + B ;
     else
       simplified when `m_1 :: x_dot = A5 * x + B ; 
       //simplified when `m_2 :: x_dot = A6 * x + B ; 
       expanded when `m_2 :: 
        il_dot = sin(il) + cos(vl5) * @t ,
        vl5_dot = A + cos(vl5) + ln(il)  ;
        

  SamplingParameters :
      time = 0.5  ;              
      space = 1 / (40 * sqrt(2)) ;
      finer = 2 ;
      scale_min_dwell = 1;
    
  safe0 = [1.3 .. 1.7] # [5.7 .. 5.8];
  safe1 = [1.3 .. 1.7] # [5.75 .. 5.8];
  safe2 = [1.3 .. 1.7] # [5.7 .. 5.75];
  safe3 = [1.75 .. 1.9] # [5.9 .. 6.0]; 
  safe4 = [-6.0 .. 6.0] # [-4.0 .. 4.0] \ [-1.5 .. 1.5] # [-1.0 .. 1.0];
  init4 = [-6.0 .. 6.0] # [-4.0 .. 4.0] \ [-1.5 .. 1.5] # [-1.0 .. 1.0];
  target4 = [2.0 .. 5.5] # [2.0 .. 3.5]; 
  init0 = [1.3 .. 1.7] # [5.7 .. 5.8];
  target = [1.5 .. 1.6] # [5.7 .. 5.725];
  // [-1.5 .. 1.5] # [-1.0 .. 1.0];

  SafetySynthesis (x,safe4,init4,4);
  //ReachabilitySynthesis (x,safe4,init4,target4,20.0,4) ;
  
  Plot2D (dots,modes,[red,blue],[black,gray,white],20.0,40.0,[(`m_1,0),(`m_2,1)],`m_1)
  //Plot2D (20.0,40.0)
}