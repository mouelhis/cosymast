Switched dcdc {

  Dimension = 2 ;
  
  Modes = { `m1, `m2 } ;
  
  Constants :
     r0,vs = 1.0 ;
     rl = 0.05 ;
     rc = rl / 10 ;
     xl = 3.0 ;
     xc = 70.0 ;
     
  Variables :
     il, vl5 : real -> real ;
     
  Trajectories :
     x = [il, vl5] ;
     
  Coefficients :
     A1,A2 : Matrix (2) ;
     b : Vector (2) ;
     AA1,AA2 : Matrix (2) ;
     bb1 : Vector (2) ;
     bb2 : Vector (2) ;;
     
     A1 = [[ -rl / xl , 0 ] , [ 0 , (-1 / xc) * (1 / (r0 + rc)) ]] ;
     A2 = [[ (-1 / xl) * (rl + ((r0 * rc) / (r0 + rc))) , ((-1 / xl) * (r0 / (r0 + rc))) / 5 ],
           [ 5 * (r0 / (r0 + rc)) * (1 / xc) , (-1 / xc) * (1 / (r0 + rc)) ]];
     b = [(vs / xl) , 0 ] ; 
     
     AA1 = [[-0.25, 1], [-2, -0.25]] ;
     AA2 = [[-0.25, 2], [-1, -0.25]] ;
     bb1 = [-0.25,-2];
     bb2 = [0.25,1];
     
  VectorFields :
     for x :
     simplified when `m1 :: x_dot = A1 * x + b ;     
     simplified when `m2 :: x_dot = A2 * x + b ;  
     //simplified when `m1 :: x_dot = AA1 * x + bb1 ;     
     //simplified when `m2 :: x_dot = AA2 * x + bb2 ;
  
  SamplingParameters :
      //time = 2  ;  
      //time = 0.5  ;
      //time =  4 ;
      time = 64 * 0.5 ;


      //space = 1 / (40 * sqrt(2));          
      //space = (10.0 ^ -3) * sqrt(2);
      //space = 8 * (10.0 ^ -3) * sqrt(2);
      //space = (4 * sqrt(2)) / 100; 
      space = 64 * 3 * (10.0 ^ -4) ;


      //finer = 2;
      //finer = 1;
      //finer = 0;  
      //finer = 3;
      finer = 6 ;
      
      //scale_min_dwell = 1;
  
  init3 = [1.3 .. 1.7] # [5.775 .. 5.8];   
  safe1 = [1.15 .. 1.55] # [5.45 .. 5.85] \ [1.25 .. 1.35] # [5.65 .. 5.7];
  safe2 = [0.65 .. 1.65] # [4.95 .. 5.95];
  safe3 = [1.3 .. 1.7] # [5.7 .. 5.8];
  safe4 = [-6.0 .. 6.0] # [-4.0 .. 4.0] \ [-1.5 .. 1.5] # [-1.0 .. 1.0];
  safe4_bad_1 = [-6.0 .. 6.0] # [-4.0 .. 4.0];
  safe4_bad_2 = [-12.0 .. 12.0] # [-8.0 .. 8.0] \ [-1.5 .. 1.5] # [-1.0 .. 1.0];
  safe5 = [1.15 .. 1.55] # [5.45 .. 5.85];
  target2 = [1.1 .. 1.6] # [5.4 .. 5.9];
  target3 = [1.5 .. 1.6] # [5.7 .. 5.725];
  target4 = [1.5 .. 1.6] # [5.775 .. 5.8];
  
  

  //SafetySynthesis (x,safe5,safe5,2);
  //SafetySynthesis (x,safe3,safe3,2);
  //SafetySynthesis (x,safe4,safe4,0.05,2); 
  //SafetySynthesis (x,safe4_bad_1,safe4_bad_1,0.05,2); //old
  //SafetySynthesis (x,safe4_bad_2,safe4_bad_2,0.05,2);     
  SafetySynthesis (x,safe5,safe5,2);

  //ReachabilitySynthesis (x,safe2,safe2,target2,3.0,2) ;
  //ReachabilitySynthesis (x,safe2,safe2,target2,80.0,2) ;
  //ReachabilitySynthesis (x,safe3,safe3,target4,10.0,2);
  //ReachabilitySynthesis (x,safe2,safe2,target3,3.0,2) ;
  
  //Dots plot
  //Plot2D (dots,modes,[lightgray,black],[lightgray,gray,black],20.0,20.0,[(`m1,0),(`m2,0),(`m1,1),(`m2,1),(`m1,2),(`m2,2)]) 
  //Plot2D (dots,modes,[lightgray,black],[lightgray],20.0,20.0,[(`m1,0),(`m2,0)])
  //Plot2D (dots,modes,[lightgray,black],[lightgray],20.0,20.0,[(`m1,0),(`m2,0)])
  //Plot2D (dots,modes,[lightgray,black],[lightgray],20.0,20.0,[(`m1,0),(`m2,0)])
  //Plot2D (dots, scales, [lightgray,black], [blue, green, red],8.0,8.0,[(`m1,0),(`m2,0),(`m1,1),(`m2,1),(`m1,2),(`m2,2)])
  //Plot2D (dots,modes,[black,lightgray],[lightgray,gray65,gray85,black],1.0,1.0,[(`m1,0),(`m2,0),(`m1,1),(`m2,1),(`m1,2),(`m2,2),(`m1,3),(`m2,3)],`m2)
  //Plot2D (dots,modes,[black,lightgray],[lightgray,gray,black],1.0,1.0,[(`m1,0),(`m2,0),(`m1,1),(`m2,1),(`m1,2),(`m2,2)])
  //Plot2D (dots,modes,[black,lightgray],[lightgray,gray,gray,gray,gray,gray,black],20.0,20.0,[(`m1,0),(`m2,0),(`m1,1),(`m2,1),(`m1,2),(`m2,2),(`m1,3),(`m2,3),(`m1,4),(`m2,4),(`m1,5),(`m2,5),(`m1,6),(`m2,6)])

  //Arrows plot
  //Plot2D (20.0,40.0)
  //Plot2D (8.0,8.0)
  //Plot2D (1.0,1.0)
  
  /*
    The parameters of the function Simulate are respectively :
    1) the start state
    2) the maximal duration DMax of simulation
    3) the tiny step "ts" to have the shape of the continuous path
    4) the resolution of the X-Axis
    5) the resolution of the Y-Axis (which must have the same resolution as the plot)
  */
  //Simulate ([-0.4,-4.0],200.0,0.05,6,1.0,1.0,`m2)
  //Simulate ([-0.4,-8.0],80.0,0.05,6,1.0,1.0,`m2)
  Simulate ([1.35,5.5],200.0,0.05,6,20.0,20.0)  
}  